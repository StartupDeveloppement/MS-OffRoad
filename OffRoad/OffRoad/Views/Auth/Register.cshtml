@model OffRoad.Models.Register

@{
    ViewBag.Title = "Register";
}

<h2>Register</h2>


@using (Html.BeginForm("Register", "Auth", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return validate()" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Register</h4>
        @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessage("RegisterError").ToHtmlString()))
        <span id="ValidError"></span>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" , @type = "email"} })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailConfirmation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailConfirmation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailConfirmation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PasswordConfirmation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordConfirmation, new { htmlAttributes = new { @class = "form-control", @type = "password" } })
                @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NickName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


}
<script>

    /* Test de la validiter des champs Nom/Prenom */
    function validate() {
        var Fname = document.getElementById("FirstName").value;
        var Lname = document.getElementById("LastName").value;
        var password = document.getElementById("Password").value;
        var etat = false;
        var err = "";

        if (!((Fname == "") && (Lname == ""))) {
            if ((Fname == "") && (Lname != "")) {
                err += "- Saisir le Prénom <br>";
            }
            if ((Fname != "") && (Lname == "")) {
                err += "- Saisir le Nom <br>";
            }
            if ((Fname != "") && (Lname != "")) {

                if (!(/^[a-zA-Z-' ]+$/.test(Fname))) {
                    err += "- Veuillez re saisire votre Prénom<br>";
                } else {
                    if (!(/^[a-zA-Z-' ]+$/.test(Lname))) {
                        err += "- Veuillez re saisire votre Nom <br>";
                    }
                    else
                        etat = true;
                }
            }
        }
        else
            etat = true;

        if (password.length < 6) {
            etat = false;
            err += "Votre mot de passe doit contenir au moins 6 caractères";
        }

        if (!etat)
            document.getElementById("ValidError").innerHTML = err;

        return etat;
    }



</script>

