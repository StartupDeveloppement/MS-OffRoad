@model OffRoad.Models.Event

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Event</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CreateDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CreateDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EditDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EditDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BeginDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BeginDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.EndDate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.EndDate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Place)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Place)
        </dd>

    </dl>
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>

@if (ViewBag.Comments != null)
{
    foreach (var comment in ViewBag.Comments)
    {
        <div class='col-md-8'>
            <div class='row com'>
                <div class="col-md-3">
                    <div>
                        @{
                            OffRoad.Models.EventComment com = new OffRoad.Models.EventComment();
                            OffRoad.Context.DBContext db = new OffRoad.Context.DBContext();
                            com = comment;
                            var requeteUser = from b in db.Users
                                              where b.Id.Equals(com.User.Id)
                                              select b;
                            var infoUserComment = requeteUser.FirstOrDefault();

                        }
                        @if (@infoUserComment == null)
                    {
                            <p>Publié par un utilisateur n'ayant plus de compte</p>
                        }
                        else
                        {
                            <p>@infoUserComment.NickName</p>
                        }

                    </div>
                </div>
                <div class="col-md-9">
                    <div>@comment.CreateDate.ToString("dd/MM/yyyy HH:mm")</div>
                    <div>@Html.Raw(System.Web.HttpUtility.HtmlDecode(comment.Text))</div>
                </div>
            </div>
        </div>}
                            }

<h3>Commentaire</h3>
@using (Html.BeginForm("CreateComment", "Events", new { idEvent = Model.Id }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="col-md-8">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <textarea name="Text" rows="6" class="form-control"> </textarea>
            </div>

            <div class="form-group">
                <a href="/Events/Index" class="btn btn-default">Précédent</a>
                <input type="submit" value="Créer" class="btn btn-default" />
            </div>
        </div>
    </div>
}