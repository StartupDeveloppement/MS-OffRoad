@model OffRoad.Models.Register

@{
    ViewBag.Title = "Register";
}

<div class="container-fluid">
    <div class="row banner">
        <div class="col-md-12">
            <img src="~/Content/Image/header_connexion.png" class="img-responsive"/>
        </div>
    </div>
</div>

@using (Html.BeginForm("Register", "Auth", FormMethod.Post, new { enctype = "multipart/form-data", onsubmit = "return validate()" }))
    {
    @Html.AntiForgeryToken()

<div class="container body-content">
    <div class="row" id="inscription_info">
        <div class="col-md-6 col-lg-offset-3">
            <h3>Inscrivez-vous!</h3>
            <h4>Pour accéder à l'espace memebre et faire partie de la team Offroad Bike, veuillez remplir le formulaire d'inscription ci-dessous :</h4>
        </div>
    </div>
    <div class="row" id="inscription_erreur">
        <div class="col-md-6 col-lg-offset-3">
            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessage("RegisterError").ToHtmlString()))
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row inscription_form">
        <div class="col-md-3 col-lg-offset-3">
            @Html.EditorFor(model => model.NickName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Pseudo" } })
            @Html.ValidationMessageFor(model => model.NickName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row inscription_form">
        <div class="col-md-3 col-lg-offset-3 form-group">      
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nom" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @type = "email", @placeholder="Email *" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Mot de passe *" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
        <div class="col-md-3">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Prénom" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.EmailConfirmation, new { htmlAttributes = new { @class = "form-control", @placeholder = "Confirmation Email *" } })
            @Html.ValidationMessageFor(model => model.EmailConfirmation, "", new { @class = "text-danger" })
            @Html.EditorFor(model => model.PasswordConfirmation, new { htmlAttributes = new { @class = "form-control", @type = "password", @placeholder = "Confirmation Mot de passe *" } })
            @Html.ValidationMessageFor(model => model.PasswordConfirmation, "", new { @class = "text-danger" })
        </div>

    </div>
    <div class="row">
        <div class="col-md-6 col-lg-offset-3">
            <p class="italique">Les libellés suivi d'un * sont obligatoire pour votre inscription soit prise en compte</p>
            <input type="submit" class="btn btn-success" id="btn_inscrit" value="Je m'inscris" />
        </div>
    </div>
    
</div>
    }
 

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")


    }
    <script>

        /* Test de la validiter des champs Nom/Prenom */
        function validate() {
            var Fname = document.getElementById("FirstName").value;
            var Lname = document.getElementById("LastName").value;
            var password = document.getElementById("Password").value;
            var etat = false;
            var err = "";

            if (!((Fname == "") && (Lname == ""))) {
                if ((Fname == "") && (Lname != "")) {
                    err += "- Saisir le Prénom <br>";
                }
                if ((Fname != "") && (Lname == "")) {
                    err += "- Saisir le Nom <br>";
                }
                if ((Fname != "") && (Lname != "")) {

                    if (!(/^[a-zA-Z-' ]+$/.test(Fname))) {
                        err += "- Veuillez re saisire votre Prénom<br>";
                    } else {
                        if (!(/^[a-zA-Z-' ]+$/.test(Lname))) {
                            err += "- Veuillez re saisire votre Nom <br>";
                        }
                        else
                            etat = true;
                    }
                }
            }
            else
                etat = true;

            if (password.length < 6) {
                etat = false;
                err += "Votre mot de passe doit contenir au moins 6 caractères";
            }

            if (!etat)
                document.getElementById("ValidError").innerHTML = err;

            return etat;
        }
    </script>

